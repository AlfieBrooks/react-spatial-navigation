{"version":3,"sources":["../src/withFocusable.js"],"names":["omitProps","keys","props","withFocusable","propagateFocus","configPropagateFocus","forgetLastFocusedChild","configForgetLastFocusedChild","trackChildren","parentFocusKey","PropTypes","string","focusKey","realFocusKey","setFocus","SpatialNavigation","bind","focused","hasFocusedChild","ROOT_FOCUS_KEY","onUpdateFocus","onUpdateHasFocusedChild","oldState","onEnterPressHandler","onEnterPress","noop","rest","onBecameFocusedHandler","onBecameFocused","layout","pauseSpatialNavigation","pause","resumeSpatialNavigation","resume","componentDidMount","node","addFocusable","componentDidUpdate","prevProps","getNodeLayoutByFocusKey","componentWillUnmount","removeFocusable","pure"],"mappings":"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","file":"withFocusable.js","sourcesContent":["/* eslint-disable react/no-find-dom-node */\nimport {findDOMNode} from 'react-dom';\nimport PropTypes from 'prop-types';\nimport uniqueId from 'lodash/uniqueId';\nimport noop from 'lodash/noop';\nimport omit from 'lodash/omit';\nimport compose from 'recompose/compose';\nimport lifecycle from 'recompose/lifecycle';\nimport withHandlers from 'recompose/withHandlers';\nimport withContext from 'recompose/withContext';\nimport withStateHandlers from 'recompose/withStateHandlers';\nimport getContext from 'recompose/getContext';\nimport pure from 'recompose/pure';\nimport mapProps from 'recompose/mapProps';\nimport SpatialNavigation, {ROOT_FOCUS_KEY} from './spatialNavigation';\n\nconst omitProps = (keys) => mapProps((props) => omit(props, keys));\n\nconst withFocusable = ({\n  propagateFocus: configPropagateFocus = false,\n  forgetLastFocusedChild: configForgetLastFocusedChild = false,\n  trackChildren = false\n} = {}) => compose(\n  getContext({\n    /**\n     * From the context provided by another higher-level 'withFocusable' component\n     */\n    parentFocusKey: PropTypes.string\n  }),\n\n  withStateHandlers(({focusKey, parentFocusKey}) => {\n    const realFocusKey = focusKey || uniqueId('sn:focusable-item-');\n\n    return {\n      realFocusKey,\n      setFocus: SpatialNavigation.setFocus.bind(null, realFocusKey),\n      focused: false,\n      hasFocusedChild: false,\n      parentFocusKey: parentFocusKey || ROOT_FOCUS_KEY\n    };\n  }, {\n    onUpdateFocus: () => (focused = false) => ({\n      focused\n    }),\n    onUpdateHasFocusedChild: (oldState) => (hasFocusedChild = false) => ({\n      hasFocusedChild: trackChildren ? hasFocusedChild : oldState.hasFocusedChild\n    })\n  }),\n\n  /**\n   * Propagate own 'focusKey' as a 'parentFocusKey' to it's children\n   */\n  withContext({\n    parentFocusKey: PropTypes.string\n  }, ({realFocusKey}) => ({\n    parentFocusKey: realFocusKey\n  })),\n\n  withHandlers({\n    onEnterPressHandler: ({\n      onEnterPress = noop,\n      ...rest\n    }) => () => {\n      onEnterPress(rest);\n    },\n    onBecameFocusedHandler: ({\n      onBecameFocused = noop,\n      ...rest\n    }) => (layout) => {\n      onBecameFocused(layout, rest);\n    },\n    pauseSpatialNavigation: () => SpatialNavigation.pause,\n    resumeSpatialNavigation: () => SpatialNavigation.resume\n  }),\n\n  lifecycle({\n    componentDidMount() {\n      const {\n        realFocusKey: focusKey,\n        propagateFocus = false,\n        parentFocusKey,\n        forgetLastFocusedChild = false,\n        onEnterPressHandler,\n        onBecameFocusedHandler,\n        onUpdateFocus,\n        onUpdateHasFocusedChild\n      } = this.props;\n\n      const node = findDOMNode(this);\n\n      SpatialNavigation.addFocusable({\n        focusKey,\n        node,\n        parentFocusKey,\n        onEnterPressHandler,\n        onBecameFocusedHandler,\n        onUpdateFocus,\n        onUpdateHasFocusedChild,\n        propagateFocus: (configPropagateFocus || propagateFocus),\n        forgetLastFocusedChild: (configForgetLastFocusedChild || forgetLastFocusedChild)\n      });\n    },\n    componentDidUpdate(prevProps) {\n      const {focused, realFocusKey: focusKey, onBecameFocusedHandler} = this.props;\n\n      if (!prevProps.focused && focused) {\n        onBecameFocusedHandler(SpatialNavigation.getNodeLayoutByFocusKey(focusKey));\n      }\n    },\n    componentWillUnmount() {\n      const {realFocusKey: focusKey} = this.props;\n\n      SpatialNavigation.removeFocusable({\n        focusKey\n      });\n    }\n  }),\n\n  pure,\n\n  omitProps([\n    'onBecameFocusedHandler',\n    'onEnterPressHandler',\n    'onUpdateFocus',\n    'onUpdateHasFocusedChild'\n  ])\n);\n\nexport default withFocusable;\n"]}